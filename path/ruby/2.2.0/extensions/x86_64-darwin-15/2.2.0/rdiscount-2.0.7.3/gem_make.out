/Users/Kino/.rvm/rubies/ruby-2.2.1/bin/ruby -r ./siteconf20160625-28312-1l1dbwd.rb extconf.rb
checking for random()... yes
checking for srandom()... yes
checking for rand()... yes
checking for srand()... yes
checking size of unsigned long... 8
checking size of unsigned int... 4
checking size of unsigned int... 4
creating Makefile

make "DESTDIR=" clean

make "DESTDIR="
compiling amalloc.c
compiling basename.c
compiling Csio.c
compiling css.c
css.c:81:12: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        written = fwrite(res, 1, size, f);
                ~ ^~~~~~~~~~~~~~~~~~~~~~~
1 warning generated.
compiling docheader.c
compiling dumptree.c
dumptree.c:23:29: warning: returning 'const char [11]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case WHITESPACE: return "whitespace";
                            ^~~~~~~~~~~~
dumptree.c:24:29: warning: returning 'const char [5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case CODE      : return "code";
                            ^~~~~~
dumptree.c:25:29: warning: returning 'const char [6]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case QUOTE     : return "quote";
                            ^~~~~~~
dumptree.c:26:29: warning: returning 'const char [7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case MARKUP    : return "markup";
                            ^~~~~~~~
dumptree.c:27:29: warning: returning 'const char [5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case HTML      : return "html";
                            ^~~~~~
dumptree.c:28:29: warning: returning 'const char [3]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case DL        : return "dl";
                            ^~~~
dumptree.c:29:29: warning: returning 'const char [3]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case UL        : return "ul";
                            ^~~~
dumptree.c:30:29: warning: returning 'const char [3]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case OL        : return "ol";
                            ^~~~
dumptree.c:31:29: warning: returning 'const char [5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case LISTITEM  : return "item";
                            ^~~~~~
dumptree.c:32:29: warning: returning 'const char [7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case HDR       : return "header";
                            ^~~~~~~~
dumptree.c:33:29: warning: returning 'const char [3]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case HR        : return "hr";
                            ^~~~
dumptree.c:34:29: warning: returning 'const char [6]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case TABLE     : return "table";
                            ^~~~~~~
dumptree.c:35:29: warning: returning 'const char [7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case SOURCE    : return "source";
                            ^~~~~~~~
dumptree.c:36:29: warning: returning 'const char [6]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case STYLE     : return "style";
                            ^~~~~~~
dumptree.c:37:29: warning: returning 'const char [14]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    default        : return "mystery node!";
                            ^~~~~~~~~~~~~~~
dumptree.c:104:33: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { 0, "P", "center" };
                                ^~~
dumptree.c:104:38: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { 0, "P", "center" };
                                     ^~~~~~~~
17 warnings generated.
compiling emmatch.c
compiling flags.c
flags.c:10:27: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOLINKS,        "!LINKS" },
                          ^~~~~~~~
flags.c:11:27: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOIMAGE,        "!IMAGE" },
                          ^~~~~~~~
flags.c:12:27: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOPANTS,        "!PANTS" },
                          ^~~~~~~~
flags.c:13:27: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOHTML,         "!HTML" },
                          ^~~~~~~
flags.c:14:27: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_STRICT,         "STRICT" },
                          ^~~~~~~~
flags.c:15:27: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_TAGTEXT,        "TAGTEXT" },
                          ^~~~~~~~~
flags.c:16:27: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NO_EXT,         "!EXT" },
                          ^~~~~~
flags.c:17:27: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_CDATA,          "CDATA" },
                          ^~~~~~~
flags.c:18:27: warning: initializing 'char *' with an expression of type 'const char [13]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOSUPERSCRIPT,  "!SUPERSCRIPT" },
                          ^~~~~~~~~~~~~~
flags.c:19:27: warning: initializing 'char *' with an expression of type 'const char [9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NORELAXED,      "!RELAXED" },
                          ^~~~~~~~~~
flags.c:20:27: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOTABLES,       "!TABLES" },
                          ^~~~~~~~~
flags.c:21:27: warning: initializing 'char *' with an expression of type 'const char [15]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOSTRIKETHROUGH,"!STRIKETHROUGH" },
                          ^~~~~~~~~~~~~~~~
flags.c:22:27: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_TOC,            "TOC" },
                          ^~~~~
flags.c:23:27: warning: initializing 'char *' with an expression of type 'const char [13]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_1_COMPAT,       "MKD_1_COMPAT" },
                          ^~~~~~~~~~~~~~
flags.c:24:27: warning: initializing 'char *' with an expression of type 'const char [9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_AUTOLINK,       "AUTOLINK" },
                          ^~~~~~~~~~
flags.c:25:27: warning: initializing 'char *' with an expression of type 'const char [9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_SAFELINK,       "SAFELINK" },
                          ^~~~~~~~~~
flags.c:26:27: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOHEADER,       "!HEADER" },
                          ^~~~~~~~~
flags.c:27:27: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_TABSTOP,        "TABSTOP" },
                          ^~~~~~~~~
flags.c:28:27: warning: initializing 'char *' with an expression of type 'const char [10]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NODIVQUOTE,     "!DIVQUOTE" },
                          ^~~~~~~~~~~
flags.c:29:27: warning: initializing 'char *' with an expression of type 'const char [11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NOALPHALIST,    "!ALPHALIST" },
                          ^~~~~~~~~~~~
flags.c:30:27: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_NODLIST,        "!DLIST" },
                          ^~~~~~~~
flags.c:31:27: warning: initializing 'char *' with an expression of type 'const char [9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { MKD_EXTRA_FOOTNOTE, "FOOTNOTE" },
                          ^~~~~~~~~~
flags.c:45:17: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
    for (i=0; i < NR(flagnames); i++) {
              ~ ^ ~~~~~~~~~~~~~
23 warnings generated.
compiling generate.c
generate.c:228:14: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("&amp;", f);
                    ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:230:14: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("&lt;", f);
                    ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:232:14: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("%22", f);
                    ^~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:236:14: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("  ", f);
                    ^~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:238:17: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, "%%%02X", c);
                       ^~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:311:28: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                S(ref->title) = (e-title)-2;
                              ~ ~~~~~~~~~^~
generate.c:458:17: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "https:" ), 
                ^~~~~~~~
generate.c:457:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:459:17: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "http:" ), 
                ^~~~~~~
generate.c:457:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:460:17: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "news:" ),
                ^~~~~~~
generate.c:457:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:461:17: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    _aprotocol( "ftp:" ), 
                ^~~~~~
generate.c:457:25: note: expanded from macro '_aprotocol'
#define _aprotocol(x)   { x, (sizeof x)-1 }
                          ^
generate.c:473:29: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
    for (i=0, p=protocol; i < NRPROTOCOLS; i++, p++)
                          ~ ^ ~~~~~~~~~~~
generate.c:497:35: warning: initializing 'char *' with an expression of type 'const char [11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype imaget = { 0, 0, "<img src=\"", "\"",
                                  ^~~~~~~~~~~~~
generate.c:497:50: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype imaget = { 0, 0, "<img src=\"", "\"",
                                                 ^~~~
generate.c:498:12: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             1, " alt=\"", "\" />", MKD_NOIMAGE|MKD_TAGTEXT, IS_URL };
                                ^~~~~~~~~
generate.c:498:23: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             1, " alt=\"", "\" />", MKD_NOIMAGE|MKD_TAGTEXT, IS_URL };
                                           ^~~~~~~
generate.c:499:35: warning: initializing 'char *' with an expression of type 'const char [10]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype linkt  = { 0, 0, "<a href=\"", "\"",
                                  ^~~~~~~~~~~~
generate.c:499:49: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static linkytype linkt  = { 0, 0, "<a href=\"", "\"",
                                                ^~~~
generate.c:500:33: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             0, ">", "</a>", MKD_NOLINKS, IS_URL };
                                ^~~
generate.c:500:38: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                             0, ">", "</a>", MKD_NOLINKS, IS_URL };
                                     ^~~~~~
generate.c:510:7: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<span id=\"", "\"", 0, ">", "</span>", 0, 0 },
      ^~~~~
generate.c:510:17: warning: initializing 'char *' with an expression of type 'const char [11]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<span id=\"", "\"", 0, ">", "</span>", 0, 0 },
                ^~~~~~~~~~~~~
generate.c:510:32: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<span id=\"", "\"", 0, ">", "</span>", 0, 0 },
                               ^~~~
generate.c:510:41: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<span id=\"", "\"", 0, ">", "</span>", 0, 0 },
                                        ^~~
generate.c:510:46: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "id:", 3, "<span id=\"", "\"", 0, ">", "</span>", 0, 0 },
                                             ^~~~~~~~~
generate.c:511:7: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "raw:", 4, 0, 0, 0, 0, 0, MKD_NOHTML, 0 },
      ^~~~~~
generate.c:512:7: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
      ^~~~~~~
generate.c:512:19: warning: initializing 'char *' with an expression of type 'const char [13]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                  ^~~~~~~~~~~~~~~
generate.c:512:36: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                                   ^~~~
generate.c:512:45: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                                            ^~~
generate.c:512:50: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "lang:", 5, "<span lang=\"", "\"", 0, ">", "</span>", 0, 0 },
                                                 ^~~~~~~~~
generate.c:513:7: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
      ^~~~~~~
generate.c:513:19: warning: initializing 'char *' with an expression of type 'const char [14]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                  ^~~~~~~~~~~~~~~~
generate.c:513:37: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                                    ^~~~
generate.c:513:46: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                                             ^~~
generate.c:513:51: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "abbr:", 5, "<abbr title=\"", "\"", 0, ">", "</abbr>", 0, 0 },
                                                  ^~~~~~~~~
generate.c:514:7: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
      ^~~~~~~~
generate.c:514:20: warning: initializing 'char *' with an expression of type 'const char [14]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                   ^~~~~~~~~~~~~~~~
generate.c:514:38: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                                     ^~~~
generate.c:514:47: warning: initializing 'char *' with an expression of type 'const char [2]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                                              ^~~
generate.c:514:52: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { "class:", 6, "<span class=\"", "\"", 0, ">", "</span>", 0, 0 },
                                                   ^~~~~~~~~
generate.c:527:30: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
    for ( i=0, r=specials; i < NR(specials); i++,r++ ) {
                           ~ ^ ~~~~~~~~~~~~
generate.c:549:19: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            puturl(edit, strlen(edit), f, 0);
            ~~~~~~       ^~~~~~~~~~~~
generate.c:575:12: warning: returning 'const char *' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    return p->ref_prefix ? p->ref_prefix : "fn";
           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:592:13: warning: passing 'const char [64]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "<sup id=\"%sref:%d\"><a href=\"#%s:%d\" rel=\"footnote\">%d</a></sup>",
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:632:35: warning: passing 'const char [13]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            if ( ref->height ) Qprintf(f," height=\"%d\"", ref->height);
                                         ^~~~~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:633:35: warning: passing 'const char [12]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            if ( ref->width ) Qprintf(f, " width=\"%d\"", ref->width);
                                         ^~~~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:637:14: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring(" title=\"", f);
                    ^~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:733:25: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '&':   Qstring("&amp;", f); break;
                        ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:734:25: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '>':   Qstring("&gt;", f); break;
                        ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:735:25: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '<':   Qstring("&lt;", f); break;
                        ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:748:10: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("&#", f);
                ^~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:749:13: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, COINTOSS() ? "x%02x;" : "%02d;", *((unsigned char*)(s++)) );
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./config.h:12:20: note: expanded from macro 'COINTOSS'
#define COINTOSS() (random()&1)
                   ^
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:812:14: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qstring("  ", f);
                    ^~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:823:13: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<del>", f);
            ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:825:13: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</del>", f);
            ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:840:13: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<code>", f);
            ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:842:13: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</code>", f);
            ^~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:919:10: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("<a href=\"", f);
                ^~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:922:13: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            mangle("mailto:", 7, f);
                   ^~~~~~~~~
generate.c:745:14: note: passing argument to parameter 's' here
mangle(char *s, int len, MMIOT *f)
             ^
generate.c:925:10: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("\">", f);
                ^~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:927:10: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("</a>", f);
                ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:934:10: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("</a>", f);
                ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1037:17: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, "&r%cquo;", typeofquote);
                       ^~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1043:13: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "&l%cquo;", typeofquote);
                   ^~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1063:18: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    if ( !(len = strlen(s)) )
               ~ ^~~~~~~~~
generate.c:1085:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'s>",      "rsquo",  0 },
            ^~~~~
generate.c:1085:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'s>",      "rsquo",  0 },
                        ^~~~~~~
generate.c:1086:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'t>",      "rsquo",  0 },
            ^~~~~
generate.c:1086:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'t>",      "rsquo",  0 },
                        ^~~~~~~
generate.c:1087:13: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'re>",     "rsquo",  0 },
            ^~~~~~
generate.c:1087:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'re>",     "rsquo",  0 },
                        ^~~~~~~
generate.c:1088:13: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ll>",     "rsquo",  0 },
            ^~~~~~
generate.c:1088:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ll>",     "rsquo",  0 },
                        ^~~~~~~
generate.c:1089:13: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ve>",     "rsquo",  0 },
            ^~~~~~
generate.c:1089:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'ve>",     "rsquo",  0 },
                        ^~~~~~~
generate.c:1090:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'m>",      "rsquo",  0 },
            ^~~~~
generate.c:1090:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'m>",      "rsquo",  0 },
                        ^~~~~~~
generate.c:1091:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'d>",      "rsquo",  0 },
            ^~~~~
generate.c:1091:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '\'', "'d>",      "rsquo",  0 },
                        ^~~~~~~
generate.c:1092:13: warning: initializing 'char *' with an expression of type 'const char [3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "--",       "mdash",  1 },
            ^~~~
generate.c:1092:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "--",       "mdash",  1 },
                        ^~~~~~~
generate.c:1093:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "<->",      "ndash",  0 },
            ^~~~~
generate.c:1093:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '-',  "<->",      "ndash",  0 },
                        ^~~~~~~
generate.c:1094:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  "...",      "hellip", 2 },
            ^~~~~
generate.c:1094:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  "...",      "hellip", 2 },
                        ^~~~~~~~
generate.c:1095:13: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  ". . .",    "hellip", 4 },
            ^~~~~~~
generate.c:1095:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '.',  ". . .",    "hellip", 4 },
                        ^~~~~~~~
generate.c:1096:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(c)",      "copy",   2 },
            ^~~~~
generate.c:1096:25: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(c)",      "copy",   2 },
                        ^~~~~~
generate.c:1097:13: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(r)",      "reg",    2 },
            ^~~~~
generate.c:1097:25: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(r)",      "reg",    2 },
                        ^~~~~
generate.c:1098:13: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(tm)",     "trade",  3 },
            ^~~~~~
generate.c:1098:25: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '(',  "(tm)",     "trade",  3 },
                        ^~~~~~~
generate.c:1099:13: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "<3/4>",    "frac34", 2 },
            ^~~~~~~
generate.c:1099:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "<3/4>",    "frac34", 2 },
                        ^~~~~~~~
generate.c:1100:13: warning: initializing 'char *' with an expression of type 'const char [9]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "<3/4ths>", "frac34", 2 },
            ^~~~~~~~~~
generate.c:1100:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '3',  "<3/4ths>", "frac34", 2 },
                        ^~~~~~~~
generate.c:1101:13: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/2>",    "frac12", 2 },
            ^~~~~~~
generate.c:1101:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/2>",    "frac12", 2 },
                        ^~~~~~~~
generate.c:1102:13: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/4>",    "frac14", 2 },
            ^~~~~~~
generate.c:1102:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/4>",    "frac14", 2 },
                        ^~~~~~~~
generate.c:1103:13: warning: initializing 'char *' with an expression of type 'const char [8]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/4th>",  "frac14", 2 },
            ^~~~~~~~~
generate.c:1103:25: warning: initializing 'char *' with an expression of type 'const char [7]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '1',  "<1/4th>",  "frac14", 2 },
                        ^~~~~~~~
generate.c:1104:13: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    { '&',  "&#0;",      0,       3 },
            ^~~~~~
generate.c:1122:14: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Qprintf(f, "&%s;", smarties[i].entity);
                           ^~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1144:16: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            Qstring("&ldquo;", f);
                                    ^~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1146:16: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            Qstring("&rdquo;", f);
                                    ^~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1119:18: warning: comparison of integers of different signs: 'int' and 'unsigned long' [-Wsign-compare]
    for ( i=0; i < NRSMART; i++)
               ~ ^ ~~~~~~~
generate.c:1208:22: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        case 3:     Qstring(tag_text(f) ? "  " : "<br/>", f);
                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:1184:21: note: expanded from macro 'tag_text'
#define tag_text(f)     (f->flags & MKD_TAGTEXT)
                        ^
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1212:12: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("&gt;", f);
                                ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1218:12: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("&quot;", f);
                                ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1226:16: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            Qstring("![", f);
                                    ^~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1263:12: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("<sup>",f);
                                ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1265:12: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("</sup>", f);
                                ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1302:27: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    case '&':   Qstring("&amp;", f);
                                        ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1304:27: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    case '<':   Qstring("&lt;", f);
                                        ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1329:12: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("&lt;", f);
                                ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1337:12: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Qstring("&amp;", f);
                                ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1357:10: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("<a name=\"", f);
                ^~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1361:10: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("\"></a>\n", f);
                ^~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1363:16: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qprintf(f, "<h%d>", pp->hnumber);
               ^~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1366:16: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qprintf(f, "</h%d>", pp->hnumber);
               ^~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1372:31: warning: initializing 'char *' with an expression of type 'const char [1]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static char* alignments[] = { "", " align=\"center\"", " align=\"left\"",
                              ^~
generate.c:1372:35: warning: initializing 'char *' with an expression of type 'const char [16]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static char* alignments[] = { "", " align=\"center\"", " align=\"left\"",
                                  ^~~~~~~~~~~~~~~~~~~
generate.c:1372:56: warning: initializing 'char *' with an expression of type 'const char [14]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static char* alignments[] = { "", " align=\"center\"", " align=\"left\"",
                                                       ^~~~~~~~~~~~~~~~~
generate.c:1373:7: warning: initializing 'char *' with an expression of type 'const char [15]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                                  " align=\"right\"" };
                                  ^~~~~~~~~~~~~~~~~~
generate.c:1384:13: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<tr>\n", f);
            ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1393:13: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "<%s%s>",
                   ^~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1397:13: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "</%s>\n", block);
                   ^~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1403:17: warning: passing 'const char [11]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, "<%s></%s>\n", block, block);
                       ^~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1406:13: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</tr>\n", f);
            ^~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1449:13: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<table>\n", f);
            ^~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1450:13: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<thead>\n", f);
            ^~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1451:24: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    hcols = splat(hdr, "th", align, 0, f);
                       ^~~~
generate.c:1378:22: note: passing argument to parameter 'block' here
splat(Line *p, char *block, Istring align, int force, MMIOT *f)
                     ^
generate.c:1452:13: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</thead>\n", f);
            ^~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1460:13: warning: passing 'const char [9]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<tbody>\n", f);
            ^~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1462:14: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        splat(body, "td", align, 1, f);
                    ^~~~
generate.c:1378:22: note: passing argument to parameter 'block' here
splat(Line *p, char *block, Istring align, int force, MMIOT *f)
                     ^
generate.c:1463:13: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</tbody>\n", f);
            ^~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1464:13: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</table>\n", f);
            ^~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1475:30: warning: initializing 'char *' with an expression of type 'const char [1]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { "", "<p>", "<p style=\"text-align:center;\">"  };
                             ^~
generate.c:1475:34: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { "", "<p>", "<p style=\"text-align:center;\">"  };
                                 ^~~~~
generate.c:1475:41: warning: initializing 'char *' with an expression of type 'const char [31]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *Begin[] = { "", "<p>", "<p style=\"text-align:center;\">"  };
                                        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:1476:30: warning: initializing 'char *' with an expression of type 'const char [1]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *End[]   = { "", "</p>","</p>" };
                             ^~
generate.c:1476:34: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *End[]   = { "", "</p>","</p>" };
                                 ^~~~~~
generate.c:1476:41: warning: initializing 'char *' with an expression of type 'const char [5]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    static char *End[]   = { "", "</p>","</p>" };
                                        ^~~~~~
generate.c:1484:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                push("\003\n", 2, f);
                     ^~~~~~~~
generate.c:34:12: note: passing argument to parameter 'bfr' here
push(char *bfr, int size, MMIOT *f)
           ^
generate.c:1490:12: warning: passing 'const char [2]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    push("\n", 1, f);
                         ^~~~
generate.c:34:12: note: passing argument to parameter 'bfr' here
push(char *bfr, int size, MMIOT *f)
           ^
generate.c:1507:13: warning: passing 'const char [12]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("<pre><code>", f);
            ^~~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1519:13: warning: passing 'const char [14]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Qstring("</code></pre>", f);
            ^~~~~~~~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1546:13: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, arguments ? "<%s %s>" : "<%s>", block, arguments);
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1551:10: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("\n\n", f);
                ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1555:14: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
         Qprintf(f, "</%s>", block);
                    ^~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1566:10: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("<dl>\n", f);
                ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1570:11: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Qstring("<dt>", f);
                        ^~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1572:11: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Qstring("</dt>\n", f);
                        ^~~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1575:23: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            htmlify(p->down, "dd", p->ident, f);
                             ^~~~
generate.c:1542:29: note: passing argument to parameter 'block' here
htmlify(Paragraph *p, char *block, char *arguments, MMIOT *f)
                            ^
generate.c:1579:10: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("</dl>", f);
                ^~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1588:13: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "<%cl", (typ==UL)?'u':'o');
                   ^~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1590:17: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            Qprintf(f, " type=\"a\"");
                       ^~~~~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1591:13: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, ">\n");
                   ^~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1594:23: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            htmlify(p->down, "li", p->ident, f);
                             ^~~~
generate.c:1542:29: note: passing argument to parameter 'block' here
htmlify(Paragraph *p, char *block, char *arguments, MMIOT *f)
                            ^
generate.c:1598:13: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qprintf(f, "</%cl>\n", (typ==UL)?'u':'o');
                   ^~~~~~~~~~
generate.c:155:25: note: passing argument to parameter 'fmt' here
Qprintf(MMIOT *f, char *fmt, ...)
                        ^
generate.c:1624:19: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        htmlify(p->down, p->ident ? "div" : "blockquote", p->ident, f);
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
generate.c:1542:29: note: passing argument to parameter 'block' here
htmlify(Paragraph *p, char *block, char *arguments, MMIOT *f)
                            ^
generate.c:1638:10: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Qstring("<hr />", f);
                ^~~~~~~~
generate.c:135:15: note: passing argument to parameter 's' here
Qstring(char *s, MMIOT *f)
              ^
generate.c:1672:23: warning: passing 'const char [37]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Csprintf(&m->out, "\n<div class=\"footnotes\">\n<hr/>\n<ol>\n");
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
generate.c:1678:21: warning: passing 'const char [20]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Csprintf(&m->out, "<li id=\"%s:%d\">\n<p>",
                                  ^~~~~~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
generate.c:1681:21: warning: passing 'const char [47]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Csprintf(&m->out, "<a href=\"#%sref:%d\" rev=\"footnote\">&#8617;</a>",
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
generate.c:1683:21: warning: passing 'const char [11]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                Csprintf(&m->out, "</p></li>\n");
                                  ^~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
generate.c:1687:23: warning: passing 'const char [14]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    Csprintf(&m->out, "</ol>\n</div>\n");
                      ^~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
169 warnings generated.
compiling html5.c
html5.c:15:20: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("ASIDE", 0);
                   ^~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:16:20: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("FOOTER", 0);
                   ^~~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:17:20: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("HEADER", 0);
                   ^~~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:18:20: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("HGROUP", 0);
                   ^~~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:19:20: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("NAV", 0);
                   ^~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:20:20: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("SECTION", 0);
                   ^~~~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
html5.c:21:20: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    mkd_define_tag("ARTICLE", 0);
                   ^~~~~~~~~
./tags.h:17:27: note: passing argument to parameter here
void mkd_define_tag(char *, int);
                          ^
7 warnings generated.
compiling markdown.c
markdown.c:104:30: warning: initializing 'char *' with an expression of type 'const char [4]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
static struct kw comment = { "!--", 3, 0 };
                             ^~~~~
markdown.c:185:21: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            splitline(t, 3 + (end - T(t->text)) );
            ~~~~~~~~~    ~~^~~~~~~~~~~~~~~~~~~~
markdown.c:743:8: warning: initializing 'char *' with an expression of type 'const char [6]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        char *prefix = "class";
              ^        ~~~~~~~
markdown.c:751:12: warning: assigning to 'char *' from 'const char [3]' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
            prefix="id";
                  ^~~~~
4 warnings generated.
compiling mkdio.c
compiling rdiscount.c
rdiscount.c:19:17: warning: implicit declaration of function 'rb_rdiscount__get_flags' is invalid in C99 [-Wimplicit-function-declaration]
    int flags = rb_rdiscount__get_flags(self);
                ^
rdiscount.c:32:48: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
    MMIOT *doc = mkd_string(RSTRING_PTR(text), RSTRING_LEN(text), flags);
                 ~~~~~~~~~~                    ^~~~~~~~~~~~~~~~~
/Users/Kino/.rvm/rubies/ruby-2.2.1/include/ruby-2.2.0/ruby/ruby.h:863:6: note: expanded from macro 'RSTRING_LEN'
     RSTRING_EMBED_LEN(str) : \
     ^~~~~~~~~~~~~~~~~~~~~~
/Users/Kino/.rvm/rubies/ruby-2.2.1/include/ruby-2.2.0/ruby/ruby.h:859:6: note: expanded from macro 'RSTRING_EMBED_LEN'
     (long)((RBASIC(str)->flags >> RSTRING_EMBED_LEN_SHIFT) & \
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
rdiscount.c:32:48: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
    MMIOT *doc = mkd_string(RSTRING_PTR(text), RSTRING_LEN(text), flags);
                 ~~~~~~~~~~                    ^~~~~~~~~~~~~~~~~
/Users/Kino/.rvm/rubies/ruby-2.2.1/include/ruby-2.2.0/ruby/ruby.h:864:28: note: expanded from macro 'RSTRING_LEN'
     RSTRING(str)->as.heap.len)
     ~~~~~~~~~~~~~~~~~~~~~~^~~
rdiscount.c:71:48: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
    MMIOT *doc = mkd_string(RSTRING_PTR(text), RSTRING_LEN(text), flags);
                 ~~~~~~~~~~                    ^~~~~~~~~~~~~~~~~
/Users/Kino/.rvm/rubies/ruby-2.2.1/include/ruby-2.2.0/ruby/ruby.h:863:6: note: expanded from macro 'RSTRING_LEN'
     RSTRING_EMBED_LEN(str) : \
     ^~~~~~~~~~~~~~~~~~~~~~
/Users/Kino/.rvm/rubies/ruby-2.2.1/include/ruby-2.2.0/ruby/ruby.h:859:6: note: expanded from macro 'RSTRING_EMBED_LEN'
     (long)((RBASIC(str)->flags >> RSTRING_EMBED_LEN_SHIFT) & \
     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
rdiscount.c:71:48: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
    MMIOT *doc = mkd_string(RSTRING_PTR(text), RSTRING_LEN(text), flags);
                 ~~~~~~~~~~                    ^~~~~~~~~~~~~~~~~
/Users/Kino/.rvm/rubies/ruby-2.2.1/include/ruby-2.2.0/ruby/ruby.h:864:28: note: expanded from macro 'RSTRING_LEN'
     RSTRING(str)->as.heap.len)
     ~~~~~~~~~~~~~~~~~~~~~~^~~
5 warnings generated.
compiling resource.c
compiling setup.c
compiling tags.c
tags.c:18:15: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    p->size = strlen(id);
            ~ ^~~~~~~~~~
tags.c:79:8: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("STYLE");
       ^~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:80:8: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("SCRIPT");
       ^~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:81:8: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("ADDRESS");
       ^~~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:82:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("BDO");
       ^~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:83:8: warning: passing 'const char [11]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("BLOCKQUOTE");
       ^~~~~~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:84:8: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("CENTER");
       ^~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:85:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("DFN");
       ^~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:86:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("DIV");
       ^~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:87:8: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("OBJECT");
       ^~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:88:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H1");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:89:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H2");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:90:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H3");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:91:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H4");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:92:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H5");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:93:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("H6");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:94:8: warning: passing 'const char [8]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("LISTING");
       ^~~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:95:8: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("NOBR");
       ^~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:96:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("UL");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:97:8: warning: passing 'const char [2]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("P");
       ^~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:98:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("OL");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:99:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("DL");
       ^~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:100:8: warning: passing 'const char [10]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("PLAINTEXT");
       ^~~~~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:101:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("PRE");
       ^~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:102:8: warning: passing 'const char [6]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("TABLE");
       ^~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:103:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("WBR");
       ^~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:104:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("XMP");
       ^~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:105:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    SC("HR");
       ^~~~
tags.c:74:30: note: expanded from macro 'SC'
#define SC(x)   mkd_define_tag(x, 1)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:106:8: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    SC("BR");
       ^~~~
tags.c:74:30: note: expanded from macro 'SC'
#define SC(x)   mkd_define_tag(x, 1)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:107:8: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("IFRAME");
       ^~~~~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
tags.c:108:8: warning: passing 'const char [4]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    KW("MAP");
       ^~~~~
tags.c:73:30: note: expanded from macro 'KW'
#define KW(x)   mkd_define_tag(x, 0)
                               ^
tags.c:13:22: note: passing argument to parameter 'id' here
mkd_define_tag(char *id, int selfclose)
                     ^
31 warnings generated.
compiling toc.c
toc.c:43:23: warning: passing 'const char [15]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                            Csprintf(&res, "%*s</ul></li>\n", last_hnumber-1,"");
                                           ^~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:49:19: warning: passing 'const char [11]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                        Csprintf(&res, "%*s%s<ul>\n", last_hnumber, "",
                                       ^~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:53:22: warning: passing 'const char [18]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    Csprintf(&res, "%*s<li><a href=\"#", srcp->hnumber, "");
                                   ^~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:57:22: warning: passing 'const char [3]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    Csprintf(&res, "\">");
                                   ^~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:61:22: warning: passing 'const char [5]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    Csprintf(&res, "</a>");
                                   ^~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:62:22: warning: passing 'const char [7]' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                    Csprintf(&res, "</li>\n");
                                   ^~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:70:17: warning: passing 'const char *' to parameter of type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
        Csprintf(&res, last_hnumber ? "%*s</ul></li>\n" : "%*s</ul>\n", last_hnumber, "");
                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./cstring.h:73:38: note: passing argument to parameter here
extern int Csprintf(Cstring *, char *, ...);
                                     ^
toc.c:98:8: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        ret = fwrite(buf, 1, sz, out);
            ~ ^~~~~~~~~~~~~~~~~~~~~~~
8 warnings generated.
compiling version.c
compiling xml.c
xml.c:26:24: warning: returning 'const char [5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '<':   return "&lt;";
                       ^~~~~~
xml.c:27:24: warning: returning 'const char [5]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '>':   return "&gt;";
                       ^~~~~~
xml.c:28:24: warning: returning 'const char [6]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '&':   return "&amp;";
                       ^~~~~~~
xml.c:29:24: warning: returning 'const char [7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '"':   return "&quot;";
                       ^~~~~~~~
xml.c:30:24: warning: returning 'const char [7]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
    case '\'':  return "&apos;";
                       ^~~~~~~~
xml.c:33:10: warning: returning 'const char [1]' from a function with result type 'char *' discards qualifiers [-Wincompatible-pointer-types-discards-qualifiers]
                return "";
                       ^~
xml.c:73:26: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            Cswrite(&f, entity, strlen(entity));
            ~~~~~~~             ^~~~~~~~~~~~~~
7 warnings generated.
compiling xmlpage.c
linking shared-object rdiscount.bundle

make "DESTDIR=" install
/usr/bin/install -c -m 0755 rdiscount.bundle ./.gem.20160625-28312-1860lx3
